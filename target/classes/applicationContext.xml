<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--  xmlns:mvc:mvc的命名空间  -->

    <!--
      context:component-scan
      在springIOC初始化过程中,自动创建并管理com.softeem.springmvc包以及子包中拥有下面注解的对象
      @Repository
      @Service
      @Controller
      @Component
     -->
    <context:component-scan base-package="com.softeem"/>

    <!--  启动SpringMVC的注解开发模式  -->
<!--    <mvc:annotation-driven conversion-service="conversionServise">-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- Servlet中解决编码问题使用的:response.setContentType("text/html;charset=utf-8") -->
                        <value>text/html;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--   将图片/js/css等静态资源排除在外,可提高执行效率     -->
    <mvc:default-servlet-handler/>

<!--    <bean id="conversionServise" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
<!--        <property name="converters">-->
<!--            <set>-->
<!--                <bean class="com.softeem.util.MyDateConverter"/>-->
<!--            </set>-->
<!--        </property>-->
<!--    </bean>-->

    <!--  id固定写死 -->
<!--    <bean id="ViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
<!--        &lt;!&ndash;  设置响应输出,并解决中文乱码 &ndash;&gt;-->
<!--        <property name="contentType" value="text/html;charset=utf-8"></property>-->
<!--        &lt;!&ndash;  指定Freemark模板文件扩展名  &ndash;&gt;-->
<!--        <property name="suffix" value=".ftl" />-->
<!--    </bean>-->

    <!--  配置jsp模板引擎解析器  -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--  设置响应输出,并解决中文乱码 -->
        <property name="contentType" value="text/html;charset=utf-8"></property>
        <!--  设置模板引擎前缀(所存放的公共父目录)  -->
        <property name="prefix" value="/WEB-INF/ftl" />
        <!--  设置使用jsp后缀的文件  -->
        <property name="suffix" value=".jsp" />
    </bean>

<!--    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
<!--         &lt;!&ndash;-->
<!--            设置freemarker模板保存的目录,为什么要放在WEB-INF文件里,众所周知,WEB-INF文件下的文件不能被直接访问-->
<!--            JSP文件天然的被Tomcat支持,运行,但是Tomcat无法直接解析Freemarker的模板引擎-->
<!--            所以为了模板的安全,就会把Freemarker模板放在/WEB-INF中-->
<!--          &ndash;&gt;-->
<!--        <property name="templateLoaderPath" value="/WEB-INF/ftl" />-->
<!--        &lt;!&ndash; 其他设置 &ndash;&gt;-->
<!--        <property name="freemarkerSettings">-->
<!--            <props>-->
<!--                &lt;!&ndash; 设置Freemarker脚本与数据渲染时使用的字符集 &ndash;&gt;-->
<!--                <prop key="defaultEncoding">UTF-8</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->
</beans>